version: 2.1

orbs:
  build-tools: circleci/build-tools@2.5.0
  docker: circleci/docker@dev:alpha
  jq: circleci/jq@2.0
  node: circleci/node@1.1.3
  orb-tools: circleci/orb-tools@9.0

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

jobs:
  test:
    parameters:
      executor:
        type: executor

      docker-version:
        type: string
        default: latest

      docker-compose-version:
        type: string
        default: latest

      dockerize-version:
        type: string
        default: latest

      install-goss:
        type: boolean
        default: true

      goss-version:
        type: string
        default: latest

      test-all-in-one-command:
        type: boolean
        default: false

      debug:
        type: boolean
        default: false

    executor: <<parameters.executor>>

    steps:
      - checkout
      - build-tools/install-ci-tools
      - jq/install

      - unless:
          condition: <<parameters.test-all-in-one-command>>
          steps:
            - docker/install-docker:
                version: <<parameters.docker-version>>

            - docker/install-docker-compose:
                version: <<parameters.docker-compose-version>>

            - docker/install-dockerize:
                version: <<parameters.dockerize-version>>

            - when:
                condition: <<parameters.install-goss>>
                steps:
                  - docker/install-goss:
                      version: <<parameters.goss-version>>
                      debug: <<parameters.debug>>

      - when:
          condition: <<parameters.test-all-in-one-command>>
          steps:
            - docker/install-docker-tools:
                docker-version: <<parameters.docker-version>>
                docker-compose-version: <<parameters.docker-compose-version>>
                dockerize-version: <<parameters.dockerize-version>>
                install-goss-dgoss: <<parameters.install-goss>>
                goss-version: <<parameters.goss-version>>
                debug: <<parameters.debug>>
  test-pull:
    executor: orb-tools/node-cci

    steps:
      - setup_remote_docker

      - docker/pull:
          images: cimg/base:stable,ubuntu:18.04

      - docker/pull:
          images: cimg/base:stable,cimg/base:not_exists,cimg/go:stable
          ignore-docker-pull-error: true

  test-check-command:
    parameters:
      executor:
        type: executor
      docker-username:
        type: env_var_name
      docker-password:
        type: env_var_name
      use-docker-credentials-store:
        type: boolean
    executor: <<parameters.executor>>

    steps:
      - docker/check:
          docker-username: <<parameters.docker-username>>
          docker-password: <<parameters.docker-password>>
          use-docker-credentials-store: <<parameters.use-docker-credentials-store>>

  test-credentials-store:
    parameters:
      executor:
        type: executor
      helper-name:
        type: enum
        enum: ["", "pass", "osxkeychain"]
        default: ""
      docker-username:
        type: env_var_name
      docker-password:
        type: env_var_name
    executor: <<parameters.executor>>

    steps:
      - docker/install-docker-credential-helper:
          helper-name: <<parameters.helper-name>>
      - docker/configure-docker-credentials-store:
          helper-name: <<parameters.helper-name>>
      - run:
          name: Test login
          command: |
            LOGIN_RESULT=$(echo "$<<parameters.docker-password>>" \
            | docker login -u "$<<parameters.docker-username>>" --password-stdin)
            set -x
            echo "$LOGIN_RESULT" | grep "Login Succeeded"
            set +x
            if echo "$LOGIN_RESULT" | grep -q "WARNING"; then
            echo "Error - warning found in login result"
            exit 1
            fi

promotion_requires: &promotion_requires
  [
    hadolint,
    test-check-command-docker,
    test-check-command-machine,
    test-check-command-macos,
    test-credentials-store-docker,
    test-credentials-store-machine,
    test-credentials-store-macos,
    publish-machine,
    publish-docker-cache,
    publish-docker-cache-not-found,
    test-pull,
    latest-alpine,
    older-alpine,
    latest-machine,
    older-machine,
    latest-mac,
    older-mac,
    latest-docker,
    older-docker,
    latest-ci-docker,
    older-ci-docker,
    latest-alpine-altogether,
    older-alpine-altogether,
    latest-machine-altogether,
    older-machine-altogether,
    latest-mac-altogether,
    older-mac-altogether,
    latest-docker-altogether,
    older-docker-altogether,
    latest-ci-docker-altogether,
    older-ci-docker-altogether,
    latest-oracle,
    older-oracle,
    latest-oracle-altogether,
    older-oracle-altogether
  ]

workflows:
  lint_pack-validate_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint

      - orb-tools/pack:
          requires: [orb-tools/lint]

      - orb-tools/publish-dev:
          orb-name: circleci/docker
          context: orb-publishing
          requires: [orb-tools/pack]

      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires: [orb-tools/publish-dev]

  integration-tests_prod-release:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # hadolint
      - docker/hadolint:
          name: hadolint
          ignore-rules: DL4005,DL3008,DL3009,DL3015
          trusted-registries: docker.io,my-company.com:5000
          dockerfiles: test.Dockerfile,test2.Dockerfile

      # check command
      - test-check-command:
          name: test-check-command-docker
          executor: docker/docker
          context: orb-publishing
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS
          use-docker-credentials-store: false

      - test-check-command:
          name: test-check-command-machine
          executor: orb-tools/machine
          context: orb-publishing
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS
          use-docker-credentials-store: true

      - test-check-command:
          name: test-check-command-macos
          executor: orb-tools/macos
          context: orb-publishing
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS
          use-docker-credentials-store: true
          pre-steps:
            - docker/install-docker

      # login with credentials store does not result in warning
      - test-credentials-store:
          name: test-credentials-store-docker
          executor: docker/docker
          context: orb-publishing
          helper-name: pass
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS

      - test-credentials-store:
          name: test-credentials-store-machine
          executor: orb-tools/machine
          context: orb-publishing
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS

      - test-credentials-store:
          name: test-credentials-store-macos
          executor: orb-tools/macos
          context: orb-publishing
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS
          pre-steps:
            - docker/install-docker

      # build/publish
      - docker/publish:
          name: publish-machine
          context: orb-publishing
          dockerfile: test.Dockerfile
          image: circlecipublic/docker-orb-test
          tag: $CIRCLE_BUILD_NUM-$CIRCLE_SHA1
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS
          use-docker-credentials-store: true
          pre-steps:
            # Test that it's OK to invoke the commands twice
            - docker/install-docker-credential-helper
            - docker/configure-docker-credentials-store

      - docker/publish:
          name: publish-docker
          executor: docker/docker
          context: orb-publishing
          use-remote-docker: true
          dockerfile: test.Dockerfile
          image: circlecipublic/docker-orb-test
          tag: $CIRCLE_SHA1
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS
          use-docker-credentials-store: true

      - docker/publish:
          name: publish-docker-cache
          requires:
            - publish-docker
          executor: docker/docker
          context: orb-publishing
          use-remote-docker: true
          dockerfile: test.Dockerfile
          image: circlecipublic/docker-orb-test
          tag: $CIRCLE_SHA1
          cache_from: circlecipublic/docker-orb-test:$CIRCLE_SHA1
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS
          pre-steps:
            - docker/install-docker-credential-helper:
                release-tag: v0.6.3
            - docker/configure-docker-credentials-store:
                helper-name: pass

      - docker/publish:
          name: publish-docker-cache-not-found
          executor: docker/docker
          context: orb-publishing
          use-remote-docker: true
          dockerfile: test.Dockerfile
          image: circlecipublic/docker-orb-test
          tag: $CIRCLE_SHA1-2
          cache_from: circlecipublic/docker-orb-test:not-exists
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASS

      - test-pull

      # alpine
      - test:
          name: latest-alpine
          executor: orb-tools/alpine
          pre-steps: [run: apk add gnupg]

      - test:
          name: older-alpine
          executor: orb-tools/alpine
          docker-version: v18.09.4
          docker-compose-version: 1.17.1
          dockerize-version: v0.4.0
          goss-version: v0.3.2
          pre-steps: [run: apk add gnupg]

      - test:
          name: latest-alpine-altogether
          executor: orb-tools/alpine
          test-all-in-one-command: true
          pre-steps: [run: apk add gnupg]

      - test:
          name: older-alpine-altogether
          executor: orb-tools/alpine
          test-all-in-one-command: true
          docker-version: v18.09.4
          docker-compose-version: 1.17.1
          dockerize-version: v0.4.0
          goss-version: v0.3.3
          pre-steps: [run: apk add gnupg]

      # machine
      - test:
          name: latest-machine
          executor: orb-tools/machine

      - test:
          name: older-machine
          executor: orb-tools/machine
          docker-version: v17.09.0-ce
          docker-compose-version: 1.20.0
          dockerize-version: v0.2.0
          goss-version: v0.3.4

      - test:
          name: latest-machine-altogether
          executor: orb-tools/machine
          test-all-in-one-command: true

      - test:
          name: older-machine-altogether
          executor: orb-tools/machine
          test-all-in-one-command: true
          docker-version: v17.09.0-ce
          docker-compose-version: 1.20.0
          dockerize-version: v0.2.0
          goss-version: v0.3.5

      # mac
      - test:
          name: latest-mac
          executor: orb-tools/macos
          install-goss: false

      - test:
          name: older-mac
          executor: orb-tools/macos
          docker-version: v17.12.1-ce
          docker-compose-version: 1.21.2
          dockerize-version: v0.5.0
          install-goss: false

      - test:
          name: latest-mac-altogether
          executor: orb-tools/macos
          test-all-in-one-command: true
          install-goss: false

      - test:
          name: older-mac-altogether
          executor: orb-tools/macos
          test-all-in-one-command: true
          docker-version: v17.12.1-ce
          docker-compose-version: 1.21.2
          dockerize-version: v0.5.0
          install-goss: false

      # docker
      - test:
          name: latest-docker
          executor: orb-tools/node

      - test:
          name: older-docker
          executor: orb-tools/node
          docker-version: v18.09.3
          docker-compose-version: 1.22.0
          dockerize-version: v0.6.0
          goss-version: v0.3.6

      - test:
          name: latest-docker-altogether
          executor: orb-tools/node
          test-all-in-one-command: true

      - test:
          name: older-docker-altogether
          executor: orb-tools/node
          test-all-in-one-command: true
          docker-version: v18.09.3
          docker-compose-version: 1.22.0
          dockerize-version: v0.6.0
          goss-version: v0.3.5

      # ci-docker
      - test:
          name: latest-ci-docker
          executor: orb-tools/node-cci

      - test:
          name: older-ci-docker
          executor: orb-tools/node-cci
          docker-version: v18.06.2-ce
          docker-compose-version: 1.23.1
          dockerize-version: v0.3.0
          goss-version: v0.3.4

      - test:
          name: latest-ci-docker-altogether
          executor: orb-tools/node-cci
          test-all-in-one-command: true

      - test:
          name: older-ci-docker-altogether
          executor: orb-tools/node-cci
          test-all-in-one-command: true
          docker-version: v18.06.2-ce
          docker-compose-version: 1.23.1
          dockerize-version: v0.3.0
          goss-version: v0.3.3

      # oracle
      - test:
          name: latest-oracle
          executor: orb-tools/oracle

      - test:
          name: older-oracle
          executor: orb-tools/oracle
          docker-version: v18.06.2-ce
          docker-compose-version: 1.23.1
          dockerize-version: v0.3.0
          goss-version: v0.3.2

      - test:
          name: latest-oracle-altogether
          executor: orb-tools/oracle
          test-all-in-one-command: true

      - test:
          name: older-oracle-altogether
          executor: orb-tools/oracle
          test-all-in-one-command: true
          docker-version: v18.06.2-ce
          docker-compose-version: 1.23.1
          dockerize-version: v0.3.0
          goss-version: v0.3.1

      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: circleci/docker
          context: orb-publishing
          add-pr-comment: true
          bot-token-variable: GHI_TOKEN
          bot-user: cpe-bot
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires: *promotion_requires
          filters:
            branches:
              only: master
