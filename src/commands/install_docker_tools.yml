description: >
  Install commonly used Docker tools (Docker, `docker-compose`,
  `dockerize`). Requirements: curl, grep, jq, sha256sum, tar

parameters:
  # docker
  install_docker:
    type: boolean
    default: true
    description: >
      Install the Docker CLI? Supports stable versions `v17.06.0-ce` and
      newer, on all platforms (Linux, macOS). Requirements: curl, grep,
      jq, tar

  docker_version:
    type: string
    default: latest
    description: >
      Version of Docker to install, defaults to the latest stable release.
      If specifying a version other than latest, provide a full release tag,
      as listed at https://api.github.com/repos/docker/cli/tags, e.g.,
      `v18.09.4`.

  docker_install_dir:
    type: string
    default: /usr/local/bin
    description: >
      Directory in which to install Docker binaries

  # docker-compose
  install_docker_compose:
    type: boolean
    default: true
    description: >
      Install the `docker-compose` CLI? Supports stable versions.
      Requirements: curl, Docker, grep, jq, sha256sum

  docker_compose_version:
    type: string
    default: latest
    description: >
      Version of `docker-compose` to install, defaults to the latest stable release.
      If specifying a version other than latest, provide a full release tag,
      as listed at https://github.com/docker/compose/releases or
      https://api.github.com/repos/docker/compose/releases, e.g., `1.23.1`.

  docker_compose_install_dir:
    type: string
    default: /usr/local/bin
    description: >
      Directory in which to install `docker-compose`

  # dockerize
  install_dockerize:
    type: boolean
    default: true
    description: >
      Install `dockerize`? Supports versions `v.0.4.0` and later.
      Requirements: curl, Docker

  dockerize_version:
    type: string
    default: latest
    description: >
      Version of `dockerize` to install, defaults to the latest release. If
      specifying a version other than latest, provide a full release tag, as
      listed at https://github.com/jwilder/dockerize/releases, e.g.,
      `v0.5.0`. Supports versions `v.0.4.0` and later.

  dockerize_install_dir:
    type: string
    default: /usr/local/bin
    description: >
      Directory in which to install `dockerize`

  # goss/dgoss
  install_goss_dgoss:
    type: boolean
    default: true
    description: >
      Install Goss and `dgoss`?

  goss_version:
    type: string
    default: latest
    description: >
      Version of Goss and `dgoss` to install, defaults to the latest stable
      release. If specifying a version other than latest, provide a full
      release tag, as listed at https://github.com/aelsabbahy/goss/releases
      or https://api.github.com/repos/aelsabbahy/goss/releases, e.g.,
      `v0.3.7`.

  goss_install_dir:
    type: string
    default: /usr/local/bin
    description: >
      Directory in which to install Goss and `dgoss`

  debug:
    type: boolean
    default: false
    description: >
      Extra output for orb developers

  goss_architecture:
    type: enum
    default: amd64
    enum: [ amd64, arm64 ]
    description: >
      Which Goss architecture to use. Supports `arm64` architecture from `v0.3.18` and newer.

steps:
  - when:
      condition: <<parameters.install_docker>>
      steps:
        - install_docker:
            version: <<parameters.docker_version>>
            install_dir: <<parameters.docker_install_dir>>

  - when:
      condition: <<parameters.install_docker_compose>>
      steps:
        - install_docker_compose:
            version: <<parameters.docker_compose_version>>
            install_dir: <<parameters.docker_compose_install_dir>>

  - when:
      condition: <<parameters.install_dockerize>>
      steps:
        - install_dockerize:
            version: <<parameters.dockerize_version>>
            install_dir: <<parameters.dockerize_install_dir>>

  - when:
      condition: <<parameters.install_goss_dgoss>>
      steps:
        - install_goss:
            version: <<parameters.goss_version>>
            install_dir: <<parameters.goss_install_dir>>
            debug: <<parameters.debug>>
            architecture: <<parameters.goss_architecture>>
