description: >
  Build and tag a Docker image

parameters:
  step-name:
    type: string
    default: Docker build
    description: Specify a custom step name for this command, if desired

  dockerfile:
    type: string
    default: Dockerfile
    description: Name of dockerfile to use, defaults to Dockerfile

  path:
    type: string
    default: .
    description: >
      Path to the directory containing your Dockerfile and build context,
      defaults to . (working directory)

  lint-dockerfile:
    type: boolean
    default: false
    description: >
      Lint Dockerfile before building?

  treat-warnings-as-errors:
    type: boolean
    default: false
    description: >
     If linting Dockerfile, treat linting warnings as errors (would trigger
     an exist code and fail the CircleCI job)?

  registry:
    type: string
    default: docker.io
    description: >
      Name of registry to use, defaults to docker.io

  image:
    type: string
    description: Name of image to build

  tag:
    type: string
    default: $CIRCLE_SHA1
    description: Image tag, defaults to the value of $CIRCLE_SHA1

  extra_build_args:
    type: string
    default: ""
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build

  cache_from:
    type: string
    default: ""
    description: >
      Comma separated list of containers to pull before build for --cache-from
      https://docs.docker.com/engine/reference/commandline/build/

  debug:
    type: boolean
    default: false
    description: >
      Extra output for orb developers

steps:
  - when:
      condition: <<parameters.lint-dockerfile>>
      steps:
        - dockerlint:
            treat-warnings-as-errors: <<parameters.treat-warnings-as-errors>>
            dockerfile: <<parameters.path>>/<<parameters.dockerfile>>
            debug: <<parameters.debug>>

  - when:
      condition: <<parameters.cache_from>>
      steps:
        - run: |
            echo "<<parameters.cache_from>>" | sed -n 1'p' | tr ',' '\n' | while read container; do
              echo "Pulling ${container}";
              docker pull ${container};
            done

            docker build \
              <<#parameters.extra_build_args>><<parameters.extra_build_args>><</parameters.extra_build_args>> \
              --cache-from <<parameters.cache_from>> \
              -f <<parameters.path>>/<<parameters.dockerfile>> -t \
              <<parameters.registry>>/<< parameters.image>>:<<parameters.tag>> \
              <<parameters.path>>
  - unless:
      condition: <<parameters.cache_from>>
      steps:
        - run: |
            docker build \
              <<#parameters.extra_build_args>><<parameters.extra_build_args>><</parameters.extra_build_args>> \
              -f <<parameters.path>>/<<parameters.dockerfile>> -t \
              <<parameters.registry>>/<< parameters.image>>:<<parameters.tag>> \
              <<parameters.path>>
