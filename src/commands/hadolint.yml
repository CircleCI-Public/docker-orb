description: >
  Lint a given Dockerfile using a hadolint Docker image:
  https://hub.docker.com/r/hadolint/hadolint

parameters:
  dockerfiles:
    type: string
    default: Dockerfile
    description: >
      Relative or absolute path, including name, to Dockerfile(s) to be
      linted, e.g., `~/project/app/deploy.Dockerfile`, defaults to a
      Dockerfile named `Dockerfile` in the working directory. To lint
      multiple Dockerfiles, pass a colon-separated string, e.g.,
      `~/project/app/deploy.Dockerfile:~/project/app/test.Dockerfile`.

  ignore-rules:
    type: string
    default: ""
    description: >
      Comma-separated string list of rules to ignore (e.g.,
      `DL3000,SC1010`): https://github.com/hadolint/hadolint#rules

  trusted-registries:
    type: string
    default: ""
    description: >
      Comma-separated list of trusted registries (e.g.,
      `docker.io,my-company.com:5000`); if set, return an error if
      Dockerfiles use any images from registries not included in this list

steps:
  - run:
      name: Lint <<parameters.dockerfiles>> with hadolint
      command: |
        <<#parameters.ignore-rules>>
        IGNORE_STRING=<<parameters.ignore-rules>>
        IGNORE_RULES=$(echo "--ignore ${IGNORE_STRING//,/ --ignore }")
        <</parameters.ignore-rules>>

        <<#parameters.trusted-registries>>
        REGISTRIES_STRING=<<parameters.trusted-registries>>
        TRUSTED_REGISTRIES=$(echo "--trusted-registry ${REGISTRIES_STRING//,/ --trusted-registry }")
        <</parameters.trusted-registries>>

        echo "Running hadolint with the following options..."
        echo "$IGNORE_RULES"
        echo "$TRUSTED_REGISTRIES"

        DOCKERFILES=<<parameters.dockerfiles>>

        # use colon delimiters to create array
        arrDOCKERFILES=(${DOCKERFILES//:/ })
        let END=${#arrDOCKERFILES[@]}

        for ((i=0;i<END;i++)); do
          DOCKERFILE="${arrDOCKERFILES[i]}"

          hadolint<<#parameters.ignore-rules>> $IGNORE_RULES<</parameters.ignore-rules>> <<#parameters.trusted-registries>>$TRUSTED_REGISTRIES <</parameters.trusted-registries>>$DOCKERFILE

          echo "Success! $DOCKERFILE linted; no issues found"
        done
